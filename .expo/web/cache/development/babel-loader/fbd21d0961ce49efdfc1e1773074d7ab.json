{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar as ExpoStatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { ThemeProvider } from \"styled-components/native\";\nimport { useFonts as useOswald, Oswald_400Regular } from \"@expo-google-fonts/oswald\";\nimport { useFonts as useLato, Lato_400Regular } from \"@expo-google-fonts/lato\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { RestaurantsScreen } from \"./src/features/restaurants/screens/restaurants.screen\";\nimport { theme } from \"./src/infrastructure/theme\";\nimport { SafeArea } from \"./src/components/utility/safe-area.component\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar TAB_ICON = {\n  Restaurants: \"md-restaurant\",\n  Map: \"md-map\",\n  Settings: \"md-settings\"\n};\n\nvar Settings = function Settings() {\n  return _jsx(SafeArea, {\n    children: _jsx(Text, {\n      children: \"Settings\"\n    })\n  });\n};\n\nvar Map = function Map() {\n  return _jsx(SafeArea, {\n    children: _jsx(Text, {\n      children: \"Map\"\n    })\n  });\n};\n\nvar createScreenOptions = function createScreenOptions(_ref) {\n  var route = _ref.route;\n  var iconName = TAB_ICON[route.name];\n  return {\n    tabBarIcon: function tabBarIcon(_ref2) {\n      var size = _ref2.size,\n          color = _ref2.color;\n      return _jsx(Ionicons, {\n        name: iconName,\n        size: size,\n        color: color\n      });\n    }\n  };\n};\n\nexport default function App() {\n  var _useOswald = useOswald({\n    Oswald_400Regular: Oswald_400Regular\n  }),\n      _useOswald2 = _slicedToArray(_useOswald, 1),\n      oswaldLoaded = _useOswald2[0];\n\n  var _useLato = useLato({\n    Lato_400Regular: Lato_400Regular\n  }),\n      _useLato2 = _slicedToArray(_useLato, 1),\n      latoLoaded = _useLato2[0];\n\n  if (!oswaldLoaded || !latoLoaded) {\n    return null;\n  }\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(ThemeProvider, {\n      theme: theme,\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Tab.Navigator, {\n          screenOptions: createScreenOptions,\n          tabBarOptions: {\n            activeTintColor: \"tomato\",\n            inactiveTintColor: \"gray\"\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"Restaurants\",\n            component: RestaurantsScreen\n          }), _jsx(Tab.Screen, {\n            name: \"Map\",\n            component: Map\n          }), _jsx(Tab.Screen, {\n            name: \"Settings\",\n            component: Settings\n          })]\n        })\n      })\n    }), _jsx(ExpoStatusBar, {\n      style: \"auto\"\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","ExpoStatusBar","React","ThemeProvider","useFonts","useOswald","Oswald_400Regular","useLato","Lato_400Regular","NavigationContainer","createBottomTabNavigator","Ionicons","RestaurantsScreen","theme","SafeArea","Tab","TAB_ICON","Restaurants","Map","Settings","createScreenOptions","route","iconName","name","tabBarIcon","size","color","App","oswaldLoaded","latoLoaded","activeTintColor","inactiveTintColor"],"sources":["E:/Final projects/react-native/MealsApp_/MealsApp/App.js"],"sourcesContent":["import { StatusBar as ExpoStatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport { ThemeProvider } from \"styled-components/native\";\r\nimport {\r\n  useFonts as useOswald,\r\n  Oswald_400Regular,\r\n} from \"@expo-google-fonts/oswald\";\r\nimport { useFonts as useLato, Lato_400Regular } from \"@expo-google-fonts/lato\";\r\nimport { Text } from \"react-native\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {Ionicons} from '@expo/vector-icons';\r\n\r\nimport { RestaurantsScreen } from \"./src/features/restaurants/screens/restaurants.screen\";\r\nimport { theme } from \"./src/infrastructure/theme\";\r\n\r\nimport { SafeArea } from \"./src/components/utility/safe-area.component\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst TAB_ICON = {\r\n  Restaurants: \"md-restaurant\",\r\n  Map: \"md-map\",\r\n  Settings: \"md-settings\",\r\n};\r\n\r\nconst Settings = () => (\r\n  <SafeArea>\r\n    <Text>Settings</Text>\r\n  </SafeArea>\r\n);\r\nconst Map = () => (\r\n  <SafeArea>\r\n    <Text>Map</Text>\r\n  </SafeArea>\r\n);\r\n\r\nconst createScreenOptions = ({ route }) => {\r\n  const iconName = TAB_ICON[route.name];\r\n  return {\r\n    tabBarIcon: ({ size, color }) => (\r\n      <Ionicons name={iconName} size={size} color={color} />\r\n    ),\r\n  };\r\n};\r\n\r\n\r\nexport default function App() {\r\n  const [oswaldLoaded] = useOswald({\r\n    Oswald_400Regular,\r\n  });\r\n\r\n  const [latoLoaded] = useLato({\r\n    Lato_400Regular,\r\n  });\r\n\r\n  if (!oswaldLoaded || !latoLoaded) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n    <ThemeProvider theme={theme}>\r\n    <NavigationContainer>\r\n    <Tab.Navigator\r\n             screenOptions={createScreenOptions}\r\n            tabBarOptions={{\r\n              activeTintColor: \"tomato\",\r\n              inactiveTintColor: \"gray\",\r\n            }}\r\n          >\r\n            <Tab.Screen name=\"Restaurants\" component={RestaurantsScreen} />\r\n            <Tab.Screen name=\"Map\" component={Map} />\r\n            <Tab.Screen name=\"Settings\" component={Settings} />\r\n          </Tab.Navigator>\r\n        </NavigationContainer>\r\n      </ThemeProvider>\r\n      <ExpoStatusBar style=\"auto\" />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,IAAIC,aAAtB,QAA2C,iBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SACEC,QAAQ,IAAIC,SADd,EAEEC,iBAFF,QAGO,2BAHP;AAIA,SAASF,QAAQ,IAAIG,OAArB,EAA8BC,eAA9B,QAAqD,yBAArD;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AAEA,SAASC,iBAAT;AACA,SAASC,KAAT;AAEA,SAASC,QAAT;;;;AAEA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;AAEA,IAAMM,QAAQ,GAAG;EACfC,WAAW,EAAE,eADE;EAEfC,GAAG,EAAE,QAFU;EAGfC,QAAQ,EAAE;AAHK,CAAjB;;AAMA,IAAMA,QAAQ,GAAG,SAAXA,QAAW;EAAA,OACf,KAAC,QAAD;IAAA,UACE,KAAC,IAAD;MAAA;IAAA;EADF,EADe;AAAA,CAAjB;;AAKA,IAAMD,GAAG,GAAG,SAANA,GAAM;EAAA,OACV,KAAC,QAAD;IAAA,UACE,KAAC,IAAD;MAAA;IAAA;EADF,EADU;AAAA,CAAZ;;AAMA,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAe;EAAA,IAAZC,KAAY,QAAZA,KAAY;EACzC,IAAMC,QAAQ,GAAGN,QAAQ,CAACK,KAAK,CAACE,IAAP,CAAzB;EACA,OAAO;IACLC,UAAU,EAAE;MAAA,IAAGC,IAAH,SAAGA,IAAH;MAAA,IAASC,KAAT,SAASA,KAAT;MAAA,OACV,KAAC,QAAD;QAAU,IAAI,EAAEJ,QAAhB;QAA0B,IAAI,EAAEG,IAAhC;QAAsC,KAAK,EAAEC;MAA7C,EADU;IAAA;EADP,CAAP;AAKD,CAPD;;AAUA,eAAe,SAASC,GAAT,GAAe;EAC5B,iBAAuBtB,SAAS,CAAC;IAC/BC,iBAAiB,EAAjBA;EAD+B,CAAD,CAAhC;EAAA;EAAA,IAAOsB,YAAP;;EAIA,eAAqBrB,OAAO,CAAC;IAC3BC,eAAe,EAAfA;EAD2B,CAAD,CAA5B;EAAA;EAAA,IAAOqB,UAAP;;EAIA,IAAI,CAACD,YAAD,IAAiB,CAACC,UAAtB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,OACE;IAAA,WACA,KAAC,aAAD;MAAe,KAAK,EAAEhB,KAAtB;MAAA,UACA,KAAC,mBAAD;QAAA,UACA,MAAC,GAAD,CAAK,SAAL;UACS,aAAa,EAAEO,mBADxB;UAEQ,aAAa,EAAE;YACbU,eAAe,EAAE,QADJ;YAEbC,iBAAiB,EAAE;UAFN,CAFvB;UAAA,WAOQ,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,aAAjB;YAA+B,SAAS,EAAEnB;UAA1C,EAPR,EAQQ,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,KAAjB;YAAuB,SAAS,EAAEM;UAAlC,EARR,EASQ,KAAC,GAAD,CAAK,MAAL;YAAY,IAAI,EAAC,UAAjB;YAA4B,SAAS,EAAEC;UAAvC,EATR;QAAA;MADA;IADA,EADA,EAgBE,KAAC,aAAD;MAAe,KAAK,EAAC;IAArB,EAhBF;EAAA,EADF;AAoBD"},"metadata":{},"sourceType":"module"}