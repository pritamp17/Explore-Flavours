{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nimport React from \"react\";\nimport styled from \"styled-components/native\";\nimport WebView from \"react-native-webview\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Text } from \"../typography/text.component\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CompactImage = styled.Image(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  border-radius: 10px;\\n  width: 120px;\\n  height: 100px;\\n\"])));\nvar CompactWebview = styled(WebView)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  border-radius: 10px;\\n  width: 120px;\\n  height: 100px;\\n\"])));\nvar Item = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  padding: 10px;\\n  max-width: 120px;\\n  align-items: center;\\n\"])));\nvar isAndroid = Platform.OS === \"android\";\nexport var CompactRestaurantInfo = function CompactRestaurantInfo(_ref) {\n  var restaurant = _ref.restaurant,\n      isMap = _ref.isMap;\n  var Image = isAndroid && isMap ? CompactWebview : CompactImage;\n  return _jsxs(Item, {\n    children: [_jsx(Image, {\n      source: {\n        uri: restaurant.photos[0]\n      }\n    }), _jsx(Text, {\n      center: true,\n      variant: \"caption\",\n      numberOfLines: 3,\n      children: restaurant.name\n    })]\n  });\n};","map":{"version":3,"names":["React","styled","WebView","Text","CompactImage","Image","CompactWebview","Item","View","isAndroid","Platform","OS","CompactRestaurantInfo","restaurant","isMap","uri","photos","name"],"sources":["E:/Final projects/react-native/MealsApp_/MealsApp/src/components/restaurant/compact-restaurant-info.component.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport WebView from \"react-native-webview\";\r\nimport { Platform } from \"react-native\";\r\n\r\nimport { Text } from \"../typography/text.component\";\r\n\r\nconst CompactImage = styled.Image`\r\n  border-radius: 10px;\r\n  width: 120px;\r\n  height: 100px;\r\n`;\r\n\r\nconst CompactWebview = styled(WebView)`\r\n  border-radius: 10px;\r\n  width: 120px;\r\n  height: 100px;\r\n`;\r\n\r\nconst Item = styled.View`\r\n  padding: 10px;\r\n  max-width: 120px;\r\n  align-items: center;\r\n`;\r\n\r\nconst isAndroid = Platform.OS === \"android\";\r\n\r\nexport const CompactRestaurantInfo = ({ restaurant, isMap }) => {\r\n  const Image = isAndroid && isMap ? CompactWebview : CompactImage;\r\n  return (\r\n    <Item>\r\n      <Image source={{ uri: restaurant.photos[0] }} />\r\n      <Text center variant=\"caption\" numberOfLines={3}>\r\n        {restaurant.name}\r\n      </Text>\r\n    </Item>\r\n  );\r\n};"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAGA,SAASC,IAAT;;;AAEA,IAAMC,YAAY,GAAGH,MAAM,CAACI,KAAV,uIAAlB;AAMA,IAAMC,cAAc,GAAGL,MAAM,CAACC,OAAD,CAAT,yIAApB;AAMA,IAAMK,IAAI,GAAGN,MAAM,CAACO,IAAV,6IAAV;AAMA,IAAMC,SAAS,GAAGC,QAAQ,CAACC,EAAT,KAAgB,SAAlC;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAA2B;EAAA,IAAxBC,UAAwB,QAAxBA,UAAwB;EAAA,IAAZC,KAAY,QAAZA,KAAY;EAC9D,IAAMT,KAAK,GAAGI,SAAS,IAAIK,KAAb,GAAqBR,cAArB,GAAsCF,YAApD;EACA,OACE,MAAC,IAAD;IAAA,WACE,KAAC,KAAD;MAAO,MAAM,EAAE;QAAEW,GAAG,EAAEF,UAAU,CAACG,MAAX,CAAkB,CAAlB;MAAP;IAAf,EADF,EAEE,KAAC,IAAD;MAAM,MAAM,MAAZ;MAAa,OAAO,EAAC,SAArB;MAA+B,aAAa,EAAE,CAA9C;MAAA,UACGH,UAAU,CAACI;IADd,EAFF;EAAA,EADF;AAQD,CAVM"},"metadata":{},"sourceType":"module"}